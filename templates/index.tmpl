<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Request Bucket</title>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@1/css/pico.min.css">
	<script src="//unpkg.com/alpinejs" defer></script>
	<script src="//unpkg.com/@alenaksu/json-viewer@2.0.0/dist/json-viewer.bundle.js"></script>
	<style>
		summary {
			display: flex;
			align-items: center;
		}

		summary mark {
			text-transform: uppercase;
			width: 5rem;
			text-align: center;
			margin-right: 0.5rem;
		}

		summary time {
			margin-left: auto;
		}

		json-viewer {
			--background-color: unset;
			--font-size: .75rem;
		}
	</style>
</head>

<body>
	<nav class="container">
		<ul>
			<li><strong>Request Bucket</strong></li>
		</ul>
		<ul>
			<li><a href="#" role="button">GitHub</a></li>
		</ul>
	</nav>
	<main class="container" x-data="state">
		<template x-for="request in requests" :key="request.Timestamp">
			<details>
				<summary>
					<mark x-text="request.Method"></mark>
					<span x-text="request.Url"></span>
					<time x-text="new Date(request.Timestamp).toISOString()"></time>
				</summary>
				<json-viewer :data="JSON.stringify(request)"></json-viewer>
			</details>
			<li></li>
		</template>
	</main>
</body>
<script>
	document.addEventListener('alpine:init', () => {
		Alpine.data('state', () => ({
			requests: JSON.parse({{ .requests }}),
			init() {
				const stream = new EventSource('/__dashboard__/sse');
				stream.addEventListener('message', (event) => {
					this.requests.unshift(JSON.parse(event.data));
				});
			}
		}))
	})
</script>